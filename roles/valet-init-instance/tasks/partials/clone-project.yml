##
#   Copyright 2023 TechDivision GmbH
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.
##
---

### variable check

- name: "partials » clone-project | fail when hub_project is not defined"
  ansible.builtin.fail:
    msg: "hub_project var is not defined - please run setup for 'init-instance' first"
  when: valet_sh_config.hub_project is not defined

- name: "partials » clone-project | fail when hub_domain is not defined"
  ansible.builtin.fail:
    msg: "hub_domain var is not defined - please run setup for 'init-instance' first"
  when: valet_sh_config.hub_domain is not defined

- name: "partials » clone-project | fail when hub_gitlab_ssh_port is not defined"
  ansible.builtin.fail:
    msg: "hub_gitlab_ssh_port var is not defined - please run setup for 'init-instance' first"
  when: valet_sh_config.hub_gitlab_ssh_port is not defined

### check if a .valet-sh.yml file already exists in current directory and fail

- name: "partials » clone-project | checking for '{{ valet_sh_filename }}' file in '{{ valet_current_path }}'"
  ansible.builtin.stat:
    path: "{{ valet_current_path }}/{{ valet_sh_filename }}"
  register: valet_sh_file_obj

- name: "partials » clone-project | fail when '{{ valet_sh_filename }}' file does exist"
  ansible.builtin.fail:
    msg: "'{{ valet_sh_filename }}' already exists in current directory. project nesting is not allowed"
  when: valet_sh_file_obj.stat.exists

## check if project folder already exists and delete it

- name: "partials » clone-project | get stat for '{{ valet_current_path }}/{{ valet_project_name }}/{{ valet_sh_default_project_name }}'"
  ansible.builtin.stat:
    path: "{{ valet_current_path }}/{{ valet_project_name }}/{{ valet_sh_default_project_name }}"
  register: valet_sh_project_folder_obj

- name: "partials » clone-project | delete existing project folder {{ valet_project_name }}/{{ valet_sh_default_project_name }}"
  ansible.builtin.file:
    path: "{{ valet_current_path }}/{{ valet_project_name }}/{{ valet_sh_default_project_name }}"
    state: absent
  when: valet_sh_project_folder_obj.stat.exists

- name: "partials » clone-project | create project folder"
  ansible.builtin.file:
    path: "{{ valet_current_path }}/{{ valet_project_name }}"
    state: directory
    mode: '0755'

- name: "workflows » magento2 | get ssh fingerprint for '{{ valet_sh_project_hub_fqdn }}:{{ valet_sh_config.hub_gitlab_ssh_port }}'"
  ansible.builtin.shell: "ssh-keyscan -tecdsa -p {{ valet_sh_config.hub_gitlab_ssh_port | string }} {{ valet_sh_project_hub_fqdn }}"
  register: valet_sh_project_hub_host_ssh_fingerprint_obj

- name: "workflows » magento2 | ensure ssh-key for '{{ valet_sh_project_hub_fqdn }}:{{ valet_sh_config.hub_gitlab_ssh_port }}' is in known_hosts"
  ansible.builtin.known_hosts:
    name: "[{{ valet_sh_project_hub_fqdn }}]:{{ valet_sh_config.hub_gitlab_ssh_port | string }}"
    key: "{{ valet_sh_project_hub_host_ssh_fingerprint_obj.stdout }}"
    path: "~/.ssh/known_hosts"
    state: present

- name: "partials » clone-project | clone {{ valet_sh_default_project_git_clone_command }}"
  ansible.builtin.git:
    repo: '{{ valet_sh_default_project_git_clone_command }}'
    dest: "{{ valet_current_path }}/{{ valet_project_name }}/{{ valet_sh_default_project_name }}"
  when: (valet_sh_default_project_branch is not defined) or (valet_sh_default_project_branch | length == 0)

- name: "partials » clone-project | clone {{ valet_sh_default_project_git_clone_command }}"
  ansible.builtin.git:
    repo: '{{ valet_sh_default_project_git_clone_command }}'
    dest: "{{ valet_current_path }}/{{ valet_project_name }}/{{ valet_sh_default_project_name }}"
    version: "{{ valet_sh_default_project_branch }}"
  when:
    - valet_sh_default_project_branch is defined
    - valet_sh_default_project_branch | length > 0

- name: "partials » clone-project | change current path to new cloned project"
  ansible.builtin.set_fact:
    valet_current_path: "{{ valet_current_path }}/{{ valet_project_name }}/{{ valet_sh_default_project_name }}"
