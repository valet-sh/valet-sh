##
#   Copyright 2023 TechDivision GmbH
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.
##
---

- name: "workflows » aem » partials » setup-instances | extract 'aem-sdk-{{ valet_sh_aem_sdk_target_version }}.zip' to '{{ runtime_tmp_dir }}'"
  ansible.builtin.unarchive:
    src: "{{ valet_sh_aem_sdk_local_cache_dir }}/aem-sdk-{{ valet_sh_aem_sdk_target_version }}.zip"
    dest: "{{ valet_sh_aem_runtime_tmp_dir }}"

- name: "workflows » aem » partials » setup-instances | copy 'aem-sdk-quickstart-{{ valet_sh_aem_sdk_target_version }}.jar' to '{{ author_dir }}/aem-author.jar'"
  ansible.builtin.copy:
    src: "{{ valet_sh_aem_runtime_tmp_dir }}/aem-sdk-quickstart-{{ valet_sh_aem_sdk_target_version }}.jar"
    dest: "{{ valet_sh_aem_author_dir }}/aem-author.jar"
    mode: '0644'

- name: "workflows » aem » partials » setup-instances | unpack aem author instance"
  ansible.builtin.shell: "{{ valet_sh_aem_java_bin }} -jar aem-author.jar -unpack"
  args:
    chdir: "{{ valet_sh_aem_author_dir }}"

- name: "workflows » aem » partials » setup-instances | copy 'aem-sdk-quickstart-{{ valet_sh_aem_sdk_target_version }}.jar' to '{{ publish_dir }}/aem-publish.jar'"
  ansible.builtin.copy:
    src: "{{ valet_sh_aem_runtime_tmp_dir }}/aem-sdk-quickstart-{{ valet_sh_aem_sdk_target_version }}.jar"
    dest: "{{ valet_sh_aem_publish_dir }}/aem-publish.jar"
    mode: '0644'

- name: "workflows » aem » partials » setup-instances | unpack aem publish instance"
  ansible.builtin.shell: "{{ valet_sh_aem_java_bin }} -jar aem-publish.jar -unpack"
  args:
    chdir: "{{ valet_sh_aem_publish_dir }}"

- name: "workflows » aem » partials » setup-instances | find dispatcher maskeself script"
  ansible.builtin.find:
    paths: "{{ valet_sh_aem_runtime_tmp_dir }}"
    patterns: "aem-sdk-dispatcher-tools-(.*)-unix.sh$"
    use_regex: true
  register: dispatcher_maskeself_script_find

- name: "workflows » aem » partials » setup-instances | set dispatcher_maskeself_script path"
  ansible.builtin.set_fact:
    dispatcher_maskeself_script: "{{ dispatcher_maskeself_script_find.files[0].path }}"

- name: "workflows » aem » partials » setup-instances | set permissions on dispatcher maskeself script"
  ansible.builtin.file:
    path: "{{ dispatcher_maskeself_script }}"
    state: touch
    mode: a+x

- name: "workflows » aem » partials » setup-instances | execute dispatcher maskeself script"
  ansible.builtin.shell: "{{ dispatcher_maskeself_script }} --nox11"
  args:
    chdir: "{{ valet_sh_aem_runtime_tmp_dir }}"
  when: current_os == "ubuntu"

- name: "workflows » aem » partials » setup-instances | execute dispatcher maskeself script"
  ansible.builtin.shell: "{{ dispatcher_maskeself_script }}"
  args:
    chdir: "{{ valet_sh_aem_runtime_tmp_dir }}"
  when: current_os != "ubuntu"

- name: "workflows » aem » partials » setup-instances | find dispatcher tools folder"
  ansible.builtin.find:
    paths: "{{ valet_sh_aem_runtime_tmp_dir }}"
    file_type: directory
    patterns: "dispatcher-sdk-(.*)$"
    use_regex: true
  register: dispatcher_tools_folder_find

- name: "workflows » aem » partials » setup-instances | set dispatcher_tools path"
  ansible.builtin.set_fact:
    dispatcher_tools_path: "{{ dispatcher_tools_folder_find.files[0].path }}"

- name: "workflows » aem » partials » setup-instances | copy dispatcher tools"
  ansible.builtin.copy:
    src: "{{ dispatcher_tools_path }}/"
    dest: "{{ valet_sh_aem_dispatcher_dir }}"
    mode: preserve

- name: "workflows » aem » partials » setup-instances | write installed version"
  ansible.builtin.copy:
    dest: "{{ valet_sh_aem_runtime_dir }}/{{ valet_sh_aem_installed_version_file_name }}"
    content: "{{ valet_sh_aem_sdk_target_version }}"
    mode: '0644'
