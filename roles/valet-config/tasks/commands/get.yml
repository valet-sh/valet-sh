##
#   Copyright 2020 TechDivision GmbH
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.
##
---

- name: "Commands » get | fail when no 'valet_config_key' is set"
  ansible.builtin.fail:
    msg: "no config key was given"
  when: (valet_config_key is not defined) or (valet_config_key | length == 0)

- name: "Commands » get | set runtime flag"
  ansible.builtin.set_fact:
    valet_config_in_command: true

- name: "Commands » get | include valet etc config file"
  ansible.builtin.include_vars:
    file: "{{ valet_etc_config_file }}"
    name: valet_etc_config_obj

- name: "Commands » get | search value for config key '{{ valet_config_key }}'"
  ansible.builtin.set_fact:
    valet_config_value: "{{ valet_etc_config_obj[valet_config_key] | default('__INVALID__') }}"

- name: "Commands » get | fail when no config value for config key '{{ valet_config_key }}' was found"
  ansible.builtin.fail:
    msg: "no config value for '{{ valet_config_key }}' found!"
  when: valet_config_value == '__INVALID__'

- name: "Commands » get | set empty array 'valet_config_list'"
  ansible.builtin.set_fact:
    valet_config_list: []

- name: "Commands » get | add config to array"
  ansible.builtin.set_fact:
    valet_config_list: "{{ valet_config_list + [[valet_config_key, valet_config_value]] }}"

- name: "Commands » get | print table based on 'valet_config_list' array"
  vsh-table:
    headers: ['Key', 'Value']
    rows: "{{ valet_config_list }}"
  tags:
    - skip_ansible_lint
