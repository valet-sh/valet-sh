##
#   Copyright 2023 TechDivision GmbH
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.
##
---

- name: "actions » default | fail when no service name was given"
  ansible.builtin.fail:
    msg: "no service name was given"
  when: (valet_service_name is not defined) or (valet_service_name | length == 0)

- name: "actions » enabled | set 'valet_service_name' var"
  ansible.builtin.set_fact:
    valet_service_name: "{{ valet_service_name | lower | replace('.', '') }}"

- name: "actions » default | reset flag var"
  ansible.builtin.set_fact:
    valet_sh_service_service_is_allowed: false
    valet_service_family: false

- name: "actions » default | check if service is allowed"
  ansible.builtin.set_fact:
    valet_sh_service_service_is_allowed: true
    valet_service_family: "{{ item.0.scope }}"
  when: valet_service_name == item.1
  with_subelements:
    - "{{ valet_sh_service_defaultable_services }}"
    - values

- name: "actions » default | fail when action is not allowed"
  ansible.builtin.fail:
    msg: "service '{{ valet_service_name }}' can not be set as default service"
  when: valet_sh_service_service_is_allowed is not defined or not valet_sh_service_service_is_allowed|bool

- name: "actions » default | check current package"
  ansible.builtin.set_fact:
    current_package: "{{ vsh_packages[valet_service_name] }}"
  when: valet_service_name in vsh_packages

- name: "actions » default | load tasks for default action"
  ansible.builtin.include_tasks: "defaults/{{ valet_service_family }}.yml"

- name: "actions » default | enable abd start {{ valet_service_name }} service"
  ansible.builtin.systemd:
    name: "{{ current_package.service }}"
    enabled: true
    state: started
  become: "{{ current_package.privileged | default(false) }}"
  when:
    - current_package is defined
    - current_package.service is defined

- name: "actions » default | persist {{ valet_service_name }} service default state"
  vsh_service_default:
    name: "{{ valet_service_name }}"
    family: "{{ valet_service_family }}"
