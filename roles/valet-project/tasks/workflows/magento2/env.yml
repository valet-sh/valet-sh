##
#   Copyright 2023 TechDivision GmbH
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.
##
---

- name: "Block"
  when: valet_sh_project_vars.instance.processed_config is defined
  ansible.builtin.block:
    - name: "Workflows » magento2 » project-env | check existence of '{{ valet_sh_project_vars.instance.processed_config }}'"
      ansible.builtin.stat:
        path: "{{ valet_current_path }}/{{ valet_sh_project_vars.instance.processed_config }}"
      register: magento2_env_php_obj

    - name: "Workflows » magento2 » project-env | fail when '{{ valet_sh_project_vars.instance.processed_config }}' does not exist"
      ansible.builtin.fail:
        msg: "processed configuration file '{{ valet_sh_project_vars.instance.processed_config }}' does not exist"
      when: not magento2_env_php_obj.stat.exists|bool

    - name: "Workflows » magento2 » project-env | copy env.php"
      ansible.builtin.copy:
        src: "{{ valet_current_path }}/{{ valet_sh_project_vars.instance.processed_config }}"
        dest: "{{ valet_sh_project_src_path }}/app/etc/env.php"
        remote_src: true
      when: magento2_env_php_obj.stat.exists|bool

- name: "Block"
  when: valet_sh_project_vars.instance.processed_config is not defined
  ansible.builtin.block:
    - name: "Workflows » magento2 » project-env | set magento2 related variables"
      ansible.builtin.set_fact:
        valet_sh_magento2_key: "{{ valet_sh_project_vars.instance.key }}"
        valet_sh_magento2_crypt_key: "{{ valet_sh_project_vars.instance.crypt_key }}"
        vsh_m2_env_config_default: "{{ valet_sh_project_vars.instance.config.system.default | default([]) }}"
        vsh_m2_env_config_stores: "{{ valet_sh_project_vars.instance.config.system.stores | default([]) }}"
        vsh_m2_env_config_websites: "{{ valet_sh_project_vars.instance.config.system.websites | default([]) }}"
        valet_sh_magento2_db_charset: "{{ valet_sh_service_mysql_charset }}"
        valet_sh_magento2_db_collation_string: ""

    - name: "Workflows » magento2 » project-env | set magento2 related variables"
      ansible.builtin.set_fact:
        valet_sh_magento2_db_name: "{{ valet_sh_project_vars.services.mysql.database }}"
      when:
        - valet_sh_project_vars.services is defined
        - valet_sh_project_vars.services.mysql is defined
        - valet_sh_project_vars.services.mysql.database is defined

    - name: "Workflows » magento2 » project-env | set magento2 related variables"
      ansible.builtin.set_fact:
        valet_sh_magento2_db_name: "{{ valet_sh_project_vars.services.mariadb.database }}"
      when:
        - valet_sh_project_vars.services is defined
        - valet_sh_project_vars.services.mariadb is defined
        - valet_sh_project_vars.services.mariadb.database is defined

    - name: "Workflows » magento2 » project-env | set database charset when db is mysql"
      ansible.builtin.set_fact:
        valet_sh_magento2_db_charset: "{{ valet_sh_project_vars.services.mysql.charset }}"
      when:
        - valet_sh_project_vars.services is defined
        - valet_sh_project_vars.services.mysql is defined
        - valet_sh_project_vars.services.mysql.charset is defined

    - name: "Workflows » magento2 » project-env | set database charset when db is mariadb"
      ansible.builtin.set_fact:
        valet_sh_magento2_db_charset: "{{ valet_sh_project_vars.services.mariadb.charset }}"
      when:
        - valet_sh_project_vars.services is defined
        - valet_sh_project_vars.services.mariadb is defined
        - valet_sh_project_vars.services.mariadb.charset is defined

    - name: "Workflows » magento2 » project-env | set custom collation string when db is mysql 8.0"
      ansible.builtin.set_fact:
        valet_sh_magento2_db_collation_string: "{{ valet_sh_service_mysql_collation_string_mysql80 }}"
      when:
        - valet_sh_project_vars.services is defined
        - valet_sh_project_vars.services.mysql is defined
        - valet_sh_project_vars.services.mysql.version is defined
        - valet_sh_project_vars.services.mysql.version == 8.0

    - name: "Workflows » magento2 » project-env | set magento2 'valet_sh_magento2_db_host' var"
      ansible.builtin.set_fact:
        valet_sh_magento2_db_host: "{{ valet_sh_service_mysql_host_presets.mysql57 }}"

    - name: "Workflows » magento2 » project-env | override magento2 'valet_sh_magento2_db_host' var"
      ansible.builtin.set_fact:
        valet_sh_magento2_db_host: "{{ valet_sh_service_mysql_host_presets.mysql80 }}"
      when:
        - valet_sh_project_vars.services is defined
        - valet_sh_project_vars.services.mysql is defined
        - valet_sh_project_vars.services.mysql.version is defined
        - valet_sh_project_vars.services.mysql.version == 8.0

    - name: "Workflows » magento2 » project-env | override magento2 'valet_sh_magento2_db_host' var"
      ansible.builtin.set_fact:
        valet_sh_magento2_db_host: "{{ valet_sh_service_mysql_host_presets.mariadb104 }}"
      when:
        - valet_sh_project_vars.services is defined
        - valet_sh_project_vars.services.mariadb is defined
        - valet_sh_project_vars.services.mariadb.version is defined
        - valet_sh_project_vars.services.mariadb.version == 10.4

    - name: "Workflows » magento2 » project-env | override magento2 'valet_sh_magento2_db_host' var"
      ansible.builtin.set_fact:
        valet_sh_magento2_db_host: "{{ valet_sh_service_mysql_host_presets.mariadb106 }}"
      when:
        - valet_sh_project_vars.services is defined
        - valet_sh_project_vars.services.mariadb is defined
        - valet_sh_project_vars.services.mariadb.version is defined
        - valet_sh_project_vars.services.mariadb.version == 10.6

    - name: "Workflows » magento2 » project-env | set 'valet_sh_magento2_rabbitmq_virtualhost' var"
      ansible.builtin.set_fact:
        valet_sh_magento2_rabbitmq_virtualhost: "{{ valet_sh_project_vars.services.rabbitmq.vhost }}"
      when:
        - valet_sh_project_vars.services is defined
        - valet_sh_project_vars.services.rabbitmq is defined
        - valet_sh_project_vars.services.rabbitmq.vhost is defined

    - name: "Workflows » magento2 » project-env | provide env.php for project"
      ansible.builtin.template:
        src: "templates/env.php.j2"
        dest: "{{ valet_sh_project_src_path }}/app/etc/env.php"
