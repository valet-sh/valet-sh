##
#   Copyright 2023 TechDivision GmbH
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.
##
---

- name: "CA | check if CA '{{ certificate_ca_cert_file }}' already exists"
  ansible.builtin.stat:
    path: "{{ certificate_ca_cert_file }}"
  register: ca_cert_check_obj

- name: "CA | check if CA '{{ certificate_ca_cert_file }}' expires in less than 6 months"
  ansible.builtin.shell: "openssl x509 -checkend 15552000 -noout -in {{ certificate_ca_cert_file }}"
  failed_when: false
  when: ca_cert_check_obj.stat.exists|bool
  register: ca_cert_expires_check_obj

- name: "CA | delete expiring CA files"
  ansible.builtin.file:
    path: "{{ certificate_ca_cert_path }}"
    state: absent
  when:
    - ca_cert_check_obj is defined
    - ca_cert_check_obj.stat is defined
    - ca_cert_check_obj.stat.exists|bool
  become: true

- name: CA | ensure base directories existing
  ansible.builtin.file:
    path: "{{ certificate_base_path_item }}"
    state: directory
    owner: root
    group: wheel
    mode: '0755'
  with_items:
    - "{{ certificate_base_path }}"
    - "{{ certificate_ca_cert_path }}"
    - "{{ certificate_server_cert_path }}"
  become: true
  loop_control:
    loop_var: certificate_base_path_item

- name: "CA | generate private ca key"
  ansible.builtin.shell: "openssl genrsa -out {{ certificate_ca_key_file }} {{ certificate_ca_key_size }}"
  args:
    creates: "{{ certificate_ca_key_file }}"
  become: true

- name: "CA | ensure only root can read ca key file"
  ansible.builtin.file:
    path: "{{ certificate_ca_key_file }}"
    owner: root
    group: wheel
    mode: '0400'
  become: true

- name: CA | generate CA Certificate
  ansible.builtin.shell: "openssl req -subj '/CN=valet.sh Development CA/O=TechDivision/C=DE' -x509 -new -nodes -key {{ certificate_ca_key_file }} -sha256 -days {{ certificate_ca_lifetime }} -out {{ certificate_ca_cert_file }}"
  args:
    creates: "{{ certificate_ca_cert_file }}"
  become: true
  register: generate_trusted_root_ca_obj

- name: "CA | add ca certificate to keystore"
  ansible.builtin.shell: "security add-trusted-cert -d -r trustRoot -k /Library/Keychains/System.keychain {{ certificate_ca_cert_file }}"
  become: true
  when: generate_trusted_root_ca_obj is changed or update_dev_ca_force is defined and update_dev_ca_force|bool
